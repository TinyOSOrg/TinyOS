================================================================================================

explorer是最基本的用户界面，大致相当于linux中的shell，用户通过explorer可以访问目录、启动程序和查看进程等

进程有两种输入输出模式，一种是接管所有输入输出，一种是托管给explorer。

当进程接管所有输入输出时
    若进程处于前台，则：
        直接print到显存，显示在屏幕上
        可以接收键盘消息
    若进程处于后台，则：
        print都打印到自己的缓冲区上，切换到前台时再拷贝到显存
        键盘消息被屏蔽
当进程将输入输出托管给explorer时
    若进程处于前台，则：
        可以通过系统调用把东西显示在explorer界面上
        可以通过系统调用从explorer命令行接受输入，并不能接收键盘消息
    若进程处于后台，则：
        可以输出到explorer上，但不能获取输入

默认情况下，进程的输入输出都是托管给explorer的，可以通过系统调用来接管自己的输入输出

任何时候，处于后台的进程都可以通过系统调用给explorer发送消息，用于提醒用户

================================================================================================

实现上，给PCB添加一个foreground_flag作为是否处于前台的标志；添加一个显示缓存指针，该指针
为空时表明输入输出被托送给explorer，否则该进程接管所有输入输出

所有输入输出对应的系统调用均跟据这两个标志进程调整

将一个接管了输入输出的进程进行前后台的切换时，要在它的显示缓存和实际显存间拷贝数据

explorer自己也有显示缓存指针，或者说它就是一个接管了输入输出的进程，只不过是内核级的，权限很高罢了

进程虚拟地址空间中，显示缓存（如果有的话）位于线程栈位图之前的位置
